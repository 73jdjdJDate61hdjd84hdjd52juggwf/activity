<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jumore.b2b.activity.mapper.DictMapper" >
  <resultMap id="BaseResultMap" type="com.jumore.b2b.activity.model.Dict" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="parentId" property="parentId" jdbcType="BIGINT" />
    <result column="ladder" property="ladder" jdbcType="CHAR" />
    <result column="itemCode" property="itemCode" jdbcType="VARCHAR" />
    <result column="itemComment" property="itemComment" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="keyCode" property="keyCode" jdbcType="VARCHAR" />
    <result column="keyVal" property="keyVal" jdbcType="VARCHAR" />
    <result column="sqrt" property="sqrt" jdbcType="BIGINT" />
    <result column="appendBy" property="appendBy" jdbcType="BIGINT" />
    <result column="appendTime" property="appendTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="refactorCode" property="refactorCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, parentId, ladder, itemCode, itemComment, status, keyCode, keyVal, sqrt, appendBy, 
    appendTime, remark, refactorCode
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jumore.b2b.activity.model.DictQueryHelper" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dict
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from dict
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from dict
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.jumore.b2b.activity.model.DictQueryHelper" >
    delete from dict
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jumore.b2b.activity.model.Dict" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dict (id, parentId, ladder, 
      itemCode, itemComment, status, 
      keyCode, keyVal, sqrt, 
      appendBy, appendTime, remark, 
      refactorCode)
    values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{ladder,jdbcType=CHAR}, 
      #{itemCode,jdbcType=VARCHAR}, #{itemComment,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{keyCode,jdbcType=VARCHAR}, #{keyVal,jdbcType=VARCHAR}, #{sqrt,jdbcType=BIGINT}, 
      #{appendBy,jdbcType=BIGINT}, #{appendTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{refactorCode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jumore.b2b.activity.model.Dict" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="BEFORE" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dict
    <trim prefix="(" suffix=")" suffixOverrides="," >
      id,
      <if test="parentId != null" >
        parentId,
      </if>
      <if test="ladder != null" >
        ladder,
      </if>
      <if test="itemCode != null" >
        itemCode,
      </if>
      <if test="itemComment != null" >
        itemComment,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="keyCode != null" >
        keyCode,
      </if>
      <if test="keyVal != null" >
        keyVal,
      </if>
      <if test="sqrt != null" >
        sqrt,
      </if>
      <if test="appendBy != null" >
        appendBy,
      </if>
      <if test="appendTime != null" >
        appendTime,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="refactorCode != null" >
        refactorCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{id,jdbcType=BIGINT},
      <if test="parentId != null" >
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="ladder != null" >
        #{ladder,jdbcType=CHAR},
      </if>
      <if test="itemCode != null" >
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemComment != null" >
        #{itemComment,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="keyCode != null" >
        #{keyCode,jdbcType=VARCHAR},
      </if>
      <if test="keyVal != null" >
        #{keyVal,jdbcType=VARCHAR},
      </if>
      <if test="sqrt != null" >
        #{sqrt,jdbcType=BIGINT},
      </if>
      <if test="appendBy != null" >
        #{appendBy,jdbcType=BIGINT},
      </if>
      <if test="appendTime != null" >
        #{appendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="refactorCode != null" >
        #{refactorCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jumore.b2b.activity.model.DictQueryHelper" resultType="java.lang.Integer" >
    select count(*) from dict
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update dict
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null" >
        parentId = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.ladder != null" >
        ladder = #{record.ladder,jdbcType=CHAR},
      </if>
      <if test="record.itemCode != null" >
        itemCode = #{record.itemCode,jdbcType=VARCHAR},
      </if>
      <if test="record.itemComment != null" >
        itemComment = #{record.itemComment,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.keyCode != null" >
        keyCode = #{record.keyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.keyVal != null" >
        keyVal = #{record.keyVal,jdbcType=VARCHAR},
      </if>
      <if test="record.sqrt != null" >
        sqrt = #{record.sqrt,jdbcType=BIGINT},
      </if>
      <if test="record.appendBy != null" >
        appendBy = #{record.appendBy,jdbcType=BIGINT},
      </if>
      <if test="record.appendTime != null" >
        appendTime = #{record.appendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.refactorCode != null" >
        refactorCode = #{record.refactorCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update dict
    set id = #{record.id,jdbcType=BIGINT},
      parentId = #{record.parentId,jdbcType=BIGINT},
      ladder = #{record.ladder,jdbcType=CHAR},
      itemCode = #{record.itemCode,jdbcType=VARCHAR},
      itemComment = #{record.itemComment,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      keyCode = #{record.keyCode,jdbcType=VARCHAR},
      keyVal = #{record.keyVal,jdbcType=VARCHAR},
      sqrt = #{record.sqrt,jdbcType=BIGINT},
      appendBy = #{record.appendBy,jdbcType=BIGINT},
      appendTime = #{record.appendTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      refactorCode = #{record.refactorCode,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jumore.b2b.activity.model.Dict" >
    update dict
    <set >
      <if test="parentId != null" >
        parentId = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="ladder != null" >
        ladder = #{ladder,jdbcType=CHAR},
      </if>
      <if test="itemCode != null" >
        itemCode = #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="itemComment != null" >
        itemComment = #{itemComment,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="keyCode != null" >
        keyCode = #{keyCode,jdbcType=VARCHAR},
      </if>
      <if test="keyVal != null" >
        keyVal = #{keyVal,jdbcType=VARCHAR},
      </if>
      <if test="sqrt != null" >
        sqrt = #{sqrt,jdbcType=BIGINT},
      </if>
      <if test="appendBy != null" >
        appendBy = #{appendBy,jdbcType=BIGINT},
      </if>
      <if test="appendTime != null" >
        appendTime = #{appendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="refactorCode != null" >
        refactorCode = #{refactorCode,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jumore.b2b.activity.model.Dict" >
    update dict
    set parentId = #{parentId,jdbcType=BIGINT},
      ladder = #{ladder,jdbcType=CHAR},
      itemCode = #{itemCode,jdbcType=VARCHAR},
      itemComment = #{itemComment,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      keyCode = #{keyCode,jdbcType=VARCHAR},
      keyVal = #{keyVal,jdbcType=VARCHAR},
      sqrt = #{sqrt,jdbcType=BIGINT},
      appendBy = #{appendBy,jdbcType=BIGINT},
      appendTime = #{appendTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      refactorCode = #{refactorCode,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>